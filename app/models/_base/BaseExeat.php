<?php

/**
 * This is the model base class for the table "{{exeat}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Exeat".
 *
 * Columns in table "{{exeat}}" available as properties of the model,
 * followed by relations of table "{{exeat}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $student
 * @property string $purpose
 * @property string $destination
 * @property string $proposed_date_out
 * @property string $proposed_days
 * @property string $proposed_date_in
 * @property string $approved_date_out
 * @property string $approved_days
 * @property string $expiring_date
 * @property string $approved_remark
 * @property string $sign_out_date
 * @property string $signed_out_by
 * @property string $expired
 * @property string $sign_in_remark
 * @property string $signed_in_by
 * @property integer $status
 * @property integer $entry_status
 *
 * @property Status $status0
 * @property Student $student0
 */
abstract class BaseExeat extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{exeat}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Exeat|Exeats', $n);
	}

	public static function representingColumn() {
		return 'purpose';
	}

	public function rules() {
		return array(
			array('student, purpose, destination, proposed_date_out, proposed_date_in, status', 'required'),
			array('student, status, entry_status', 'numerical', 'integerOnly'=>true),
			array('destination, proposed_date_out, proposed_days, proposed_date_in, approved_date_out, approved_days, expiring_date, approved_remark, sign_out_date, signed_out_by, expired, sign_in_remark, signed_in_by', 'length', 'max'=>45),
			array('proposed_date_in,approvedby, approved_date_out, approved_days, expiring_date, approved_remark, sign_out_date, signed_out_by, expired, sign_in_remark, signed_in_by, entry_status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, student, purpose, destination, proposed_date_out, proposed_days, proposed_date_in, approved_date_out, approved_days, expiring_date, approved_remark, sign_out_date, signed_out_by, expired, sign_in_remark, signed_in_by, status, entry_status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'status0' => array(self::BELONGS_TO, 'Status', 'status'),
			'student0' => array(self::BELONGS_TO, 'Student', 'student'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'student' => Yii::t('app', 'Matric Number'),
			'purpose' => Yii::t('app', 'Purpose'),
			'destination' => Yii::t('app', 'Destination'),
			'proposed_date_out' => Yii::t('app', 'Proposed Date Out'),
			'proposed_days' => Yii::t('app', 'Proposed Days'),
			'proposed_date_in' => Yii::t('app', 'Proposed Date In'),
			'approved_date_out' => Yii::t('app', 'Approved Date Out'),
			'approved_days' => Yii::t('app', 'Approved Days'),
			'expiring_date' => Yii::t('app', 'Expiring Date'),
			'approved_remark' => Yii::t('app', 'Approved Remark'),
			'sign_out_date' => Yii::t('app', 'Sign Out Date'),
			'signed_out_by' => Yii::t('app', 'Signed Out By'),
			'expired' => Yii::t('app', 'Expired'),
			'sign_in_remark' => Yii::t('app', 'Sign In Remark'),
			'signed_in_by' => Yii::t('app', 'Signed In By'),
			'status' => null,
			'entry_status' => Yii::t('app', 'Entry Status'),
			'status0' => null,
			'student0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('student', $this->student);
		$criteria->compare('purpose', $this->purpose, true);
		$criteria->compare('destination', $this->destination, true);
		$criteria->compare('proposed_date_out', $this->proposed_date_out, true);
		$criteria->compare('proposed_days', $this->proposed_days, true);
		$criteria->compare('proposed_date_in', $this->proposed_date_in, true);
		$criteria->compare('approved_date_out', $this->approved_date_out, true);
		$criteria->compare('approved_days', $this->approved_days, true);
		$criteria->compare('expiring_date', $this->expiring_date, true);
		$criteria->compare('approved_remark', $this->approved_remark, true);
		$criteria->compare('sign_out_date', $this->sign_out_date, true);
		$criteria->compare('signed_out_by', $this->signed_out_by, true);
		$criteria->compare('expired', $this->expired, true);
		$criteria->compare('sign_in_remark', $this->sign_in_remark, true);
		$criteria->compare('signed_in_by', $this->signed_in_by, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('entry_status', $this->entry_status);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}