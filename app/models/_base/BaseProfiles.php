<?php

/**
 * This is the model base class for the table "{{profiles}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Profiles".
 *
 * Columns in table "{{profiles}}" available as properties of the model,
 * followed by relations of table "{{profiles}}" available as properties of the model.
 *
 * @property integer $user_id
 * @property string $title
 * @property string $surname
 * @property string $othernames
 * @property string $gender
 * @property string $occupation
 * @property string $photo
 * @property string $address
 * @property string $phonenumbers
 *
 * @property Users $user
 */
abstract class BaseProfiles extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{profiles}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Profiles|Profiles', $n);
	}

	public static function representingColumn() {
		return 'surname';
	}

	public function rules() {
		return array(
			array('surname', 'length', 'max'=>50),
			array('othernames', 'length', 'max'=>100),
			array('gender, phonenumbers', 'length', 'max'=>10),
			array('address', 'length', 'max'=>255),
			array('photo', 'file', 'types' => 'jpg,jpeg,gif,png', 'maxSize' => 1024 * 1024 * 2, 'tooLarge' => 'Size should be less then 1MB !!!', 'on' => 'upload'),
			array('surname, othernames, gender,  photo, address, phonenumbers', 'default', 'setOnEmpty' => true, 'value' => null),
			array('user_id, surname, othernames, gender, photo, address, phonenumbers', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'Users', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'user_id' => null,
			
			'surname' => Yii::t('app', 'Surname'),
			'othernames' => Yii::t('app', 'Other Names'),
			'gender' => Yii::t('app', 'Gender'),
			
			'photo' => Yii::t('app', 'Photo'),
			'address' => Yii::t('app', 'Address'),
			'phonenumbers' => Yii::t('app', 'Phone Number(s)'),
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;
		$criteria->together = true;
		$criteria->compare('user_id', $this->user_id);
		
		$criteria->compare('surname', $this->surname, true);
		$criteria->compare('othernames', $this->othernames, true);
		$criteria->compare('gender', $this->gender, true);
		
		$criteria->compare('photo', $this->photo, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('phonenumbers', $this->phonenumbers, true);
		 $criteria->with = array('user');
		$criteria->addCondition("user.userrole=2");



		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
        public function searchTutor() {
		$criteria = new CDbCriteria;
		$criteria->together = true;
		$criteria->compare('user_id', $this->user_id);
		
		$criteria->compare('surname', $this->surname, true);
		$criteria->compare('othernames', $this->othernames, true);
		$criteria->compare('gender', $this->gender, true);
		
		$criteria->compare('photo', $this->photo, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('phonenumbers', $this->phonenumbers, true);
		 $criteria->with = array('user');
		$criteria->addCondition("user.userrole=3");



		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
        public function searchMaster() {
		$criteria = new CDbCriteria;
		$criteria->together = true;
		$criteria->compare('user_id', $this->user_id);
		
		$criteria->compare('surname', $this->surname, true);
		$criteria->compare('othernames', $this->othernames, true);
		$criteria->compare('gender', $this->gender, true);
		
		$criteria->compare('photo', $this->photo, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('phonenumbers', $this->phonenumbers, true);
		 $criteria->with = array('user');
		$criteria->addCondition("user.userrole=4");



		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}